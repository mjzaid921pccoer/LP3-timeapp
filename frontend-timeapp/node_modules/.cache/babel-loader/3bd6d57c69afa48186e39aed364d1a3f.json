{"ast":null,"code":"var _jsxFileName = \"E:\\\\A_An_Einstein\\\\Courses\\\\WebDevelopment\\\\MERN\\\\LP3\\\\TimeApp\\\\frontend-timeapp\\\\src\\\\Components\\\\screens\\\\homepage.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar mylink1 = 'http://localhost:4000/';\nvar errMsg_mylink1 = 'issue with server check >>' + mylink1 + '\\n';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: '',\n      hour: '',\n      minutes: '',\n      seconds: '',\n      count: 0\n    };\n  }\n\n  updateTime() {\n    axios.get(mylink1).then(response => {\n      this.count += 1;\n      console.log(this.count + \":\" + response);\n      this.setState({\n        today: response.data.today,\n        hour: response.data.hour,\n        minutes: response.data.minutes,\n        seconds: response.data.seconds\n      });\n    }).catch(err => {\n      console.log(errMsg_mylink1 + err.message);\n    });\n  }\n\n  componentWillMount() {\n    this.updateTime();\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.updateTime(), 60000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"myTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, \"Date: \", this.state.today), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, \"Time: \", this.state.hour + \":\" + this.state.minutes.toString() + \":\" + this.state.seconds.toString()), /*#__PURE__*/React.createElement(\"sub\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, \"note:-time would update after every 1min\")), this.updateTime());\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["E:/A_An_Einstein/Courses/WebDevelopment/MERN/LP3/TimeApp/frontend-timeapp/src/Components/screens/homepage.jsx"],"names":["React","Component","axios","mylink1","errMsg_mylink1","HomePage","constructor","props","state","today","hour","minutes","seconds","count","updateTime","get","then","response","console","log","setState","data","catch","err","message","componentWillMount","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAO,GAAC,wBAAZ;AACA,IAAIC,cAAc,GAAC,+BAA6BD,OAA7B,GAAqC,IAAxD;;AAEA,MAAME,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,KAAK,EAAC,EADO;AAEbC,MAAAA,IAAI,EAAC,EAFQ;AAGbC,MAAAA,OAAO,EAAC,EAHK;AAIbC,MAAAA,OAAO,EAAC,EAJK;AAKbC,MAAAA,KAAK,EAAC;AALO,KAAb;AAOC;;AACGC,EAAAA,UAAU,GAAE;AACRZ,IAAAA,KAAK,CAACa,GAAN,CAAUZ,OAAV,EACCa,IADD,CACMC,QAAQ,IAAI;AACd,WAAKJ,KAAL,IAAY,CAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,GAAW,GAAX,GAAeI,QAA3B;AACA,WAAKG,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAEQ,QAAQ,CAACI,IAAT,CAAcZ,KADX;AAEVC,QAAAA,IAAI,EAAEO,QAAQ,CAACI,IAAT,CAAcX,IAFV;AAGVC,QAAAA,OAAO,EAAEM,QAAQ,CAACI,IAAT,CAAcV,OAHb;AAIVC,QAAAA,OAAO,EAAEK,QAAQ,CAACI,IAAT,CAAcT;AAJb,OAAd;AAMH,KAVD,EAWCU,KAXD,CAWOC,GAAG,IAAI;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYf,cAAc,GAACmB,GAAG,CAACC,OAA/B;AACH,KAbD;AAcH;;AAELC,EAAAA,kBAAkB,GAAG;AACjB,SAAKX,UAAL;AACH;;AAEDY,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKd,UAAL,EAAP,EAA0B,KAA1B,CAA3B;AACH;;AAEDe,EAAAA,oBAAoB,GAAE;AAClBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACT,wBAAS;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKvB,KAAL,CAAWC,KAAtB,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKD,KAAL,CAAWE,IAAX,GAAgB,GAAhB,GAAoB,KAAKF,KAAL,CAAWG,OAAX,CAAmBqB,QAAnB,EAApB,GAAkD,GAAlD,GAAsD,KAAKxB,KAAL,CAAWI,OAAX,CAAmBoB,QAAnB,EAAjE,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHA,CADS,EAMR,KAAKlB,UAAL,EANQ,CAAT;AAQC;;AAjD4B;;AAoDjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nvar mylink1='http://localhost:4000/';\r\nvar errMsg_mylink1='issue with server check >>'+mylink1+'\\n';\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    today:'',\r\n    hour:'',\r\n    minutes:'',\r\n    seconds:'',\r\n    count:0\r\n    };\r\n    }\r\n        updateTime(){\r\n            axios.get(mylink1)\r\n            .then(response => {\r\n                this.count+=1;\r\n                console.log(this.count+\":\"+response);\r\n                this.setState({\r\n                    today: response.data.today,\r\n                    hour: response.data.hour,\r\n                    minutes: response.data.minutes,\r\n                    seconds: response.data.seconds\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(errMsg_mylink1+err.message);\r\n            })\r\n        }\r\n\r\n    componentWillMount() {\r\n        this.updateTime();\r\n    }\r\n        \r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.updateTime(), 60000);\r\n    }\r\n        \r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }        \r\n\r\n    render() { \r\n    return ( <div className=\"myTime\">\r\n    <center>\r\n    <h2>Date: {this.state.today}</h2> \r\n    <h2>Time: {this.state.hour+\":\"+this.state.minutes.toString()+\":\"+this.state.seconds.toString()}</h2>\r\n    <sub>note:-time would update after every 1min</sub>\r\n    </center>\r\n    {this.updateTime()}\r\n    </div> );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}